//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AssemblyManager {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("AssemblyManager.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install assembly [%ASSEMBLY%] into database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnAddAssembly {
            get {
                return ResourceManager.GetString("actnAddAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create all objects defined in assembly [%ASSEMBLY%] in database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnAddAssemblyObjects {
            get {
                return ResourceManager.GetString("actnAddAssemblyObjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add associated file %NEWVALUE% to assembly [%ASSEMBLY%] in database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnAddFile {
            get {
                return ResourceManager.GetString("actnAddFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create %TYPE% %FUNCTION% (defined in assembly [%ASSEMBLY%]) in database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnAddFunction {
            get {
                return ResourceManager.GetString("actnAddFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add asymmetric key [%KEY%] and associated login [%LOGIN%] for assemblies with public key token %THUMBPRINT% to server [%SERVER%]..
        /// </summary>
        internal static string actnAddKeyAndLogin {
            get {
                return ResourceManager.GetString("actnAddKeyAndLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add permission %PERMISSION% ASSEMBLY to login [%LOGIN%] associated with assemblies with public key token %THUMBPRINT% on server [%SERVER%]..
        /// </summary>
        internal static string actnAddPermission {
            get {
                return ResourceManager.GetString("actnAddPermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set &apos;clr enabled&apos; = %NEWVALUE% on server [%SERVER%]..
        /// </summary>
        internal static string actnChangeCLREnabledSetting {
            get {
                return ResourceManager.GetString("actnChangeCLREnabledSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change default schema for database [%DATABASE%] from [%OLDVALUE%] to [%NEWVALUE%]  on server [%SERVER%]..
        /// </summary>
        internal static string actnChangeDatabaseDefaultSchema {
            get {
                return ResourceManager.GetString("actnChangeDatabaseDefaultSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change schema for %TYPE% %FUNCTION% from [%OLDVALUE%] to [%NEWVALUE%]  in database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnChangeFunctionSchema {
            get {
                return ResourceManager.GetString("actnChangeFunctionSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set default value for parameter [%PARAMETER%] to [%NEWVALUE%] for %FUNCTION%  in database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnChangeParameterDefault {
            get {
                return ResourceManager.GetString("actnChangeParameterDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change permission set for [%ASSEMBLY%] from [%OLDVALUE%] to [%NEWVALUE%]  in database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnChangePermissionSet {
            get {
                return ResourceManager.GetString("actnChangePermissionSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the events list for trigger %FUNCTION% on %TARGET% in database %DATABASE% to &quot;%NEWVALUE%&quot;.
        /// </summary>
        internal static string actnChangeTriggerEvents {
            get {
                return ResourceManager.GetString("actnChangeTriggerEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change the target object for trigger %FUNCTION% to %NEWVALUE% in database %DATABASE%.
        /// </summary>
        internal static string actnChangeTriggerTarget {
            get {
                return ResourceManager.GetString("actnChangeTriggerTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set TRUSTWORTHY=%NEWVALUE% for database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnChangeTrustworthySetting {
            get {
                return ResourceManager.GetString("actnChangeTrustworthySetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop all assemblies and their dependent objects from database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnDropAllAssemblies {
            get {
                return ResourceManager.GetString("actnDropAllAssemblies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop assembly [%ASSEMBLY%] from database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnDropAssembly {
            get {
                return ResourceManager.GetString("actnDropAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop all objects defined in assembly [%ASSEMBLY%] from database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnDropAssemblyObjects {
            get {
                return ResourceManager.GetString("actnDropAssemblyObjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop associated file %OLDVALUE% from assembly [%ASSEMBLY%] in database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnDropFile {
            get {
                return ResourceManager.GetString("actnDropFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop %TYPE% %FUNCTION% (defined in assembly [%ASSEMBLY%]) from database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnDropFunction {
            get {
                return ResourceManager.GetString("actnDropFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove asymmetric key [%KEY%] and associated login [%LOGIN%] for assemblies with public key token %THUMBPRINT% from server [%SERVER%]..
        /// </summary>
        internal static string actnDropKeyAndLogin {
            get {
                return ResourceManager.GetString("actnDropKeyAndLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revoke permission %PERMISSION% ASSEMBLY from login [%LOGIN%] associated with assemblies with public key token %THUMBPRINT% on server [%SERVER%]..
        /// </summary>
        internal static string actnDropPermission {
            get {
                return ResourceManager.GetString("actnDropPermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change SQL name of %TYPE% %FUNCTION% from [%OLDVALUE%] to [%NEWVALUE%]  in database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnRenameFunction {
            get {
                return ResourceManager.GetString("actnRenameFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace version [%OLDVALUE%] of assembly [%ASSEMBLY%] with version [%NEWVALUE%] in database [%DATABASE%] on server [%SERVER%]..
        /// </summary>
        internal static string actnSwapAssembly {
            get {
                return ResourceManager.GetString("actnSwapAssembly", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Add {
            get {
                object obj = ResourceManager.GetObject("Add", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Alter {
            get {
                object obj = ResourceManager.GetObject("Alter", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Arrow {
            get {
                object obj = ResourceManager.GetObject("Arrow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap arrow_55 {
            get {
                object obj = ResourceManager.GetObject("arrow_55", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Assembly_Manager_Blue_400_x_300 {
            get {
                object obj = ResourceManager.GetObject("Assembly Manager Blue 400 x 300", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Checked_box {
            get {
                object obj = ResourceManager.GetObject("Checked_box", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Clipboard {
            get {
                object obj = ResourceManager.GetObject("Clipboard", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap CloneTrigger {
            get {
                object obj = ResourceManager.GetObject("CloneTrigger", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ClrDisabled {
            get {
                object obj = ResourceManager.GetObject("ClrDisabled", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ClrEnabled {
            get {
                object obj = ResourceManager.GetObject("ClrEnabled", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap connect {
            get {
                object obj = ResourceManager.GetObject("connect", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap CopyHS {
            get {
                object obj = ResourceManager.GetObject("CopyHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Create {
            get {
                object obj = ResourceManager.GetObject("Create", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap CutHS {
            get {
                object obj = ResourceManager.GetObject("CutHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Database {
            get {
                object obj = ResourceManager.GetObject("Database", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Database_Trigger {
            get {
                object obj = ResourceManager.GetObject("Database_Trigger", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to yyyy-MMM-dd HH:mm:ss.
        /// </summary>
        internal static string dateFormat {
            get {
                return ResourceManager.GetString("dateFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to APPLICATION_ROLE
        ///ASSEMBLY
        ///AUTHORIZATION_DATABASE
        ///CERTIFICATE
        ///FUNCTION
        ///INDEX
        ///MESSAGE_TYPE
        ///PARTITION_FUNCTION
        ///PARTITION_SCHEME
        ///PROCEDURE
        ///QUEUE
        ///REMOTE_SERVICE_BINDING
        ///ROLE
        ///ROUTE
        ///SCHEMA
        ///SERVICE
        ///TABLE
        ///TRIGGER
        ///USER
        ///VIEW
        ///XML_SCHEMA_COLLECTION.
        /// </summary>
        internal static string ddlAlterEvents2005 {
            get {
                return ResourceManager.GetString("ddlAlterEvents2005", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to APPLICATION_ROLE
        ///ASSEMBLY
        ///ASYMMETRIC_KEY
        ///AUTHORIZATION_DATABASE
        ///CERTIFICATE
        ///EXTENDED_PROPERTY
        ///FULLTEXT_CATALOG
        ///FULLTEXT_INDEX
        ///FUNCTION
        ///INDEX
        ///MASTER_KEY
        ///MESSAGE_TYPE
        ///PARTITION_FUNCTION
        ///PARTITION_SCHEME
        ///PLAN_GUIDE
        ///PROCEDURE
        ///QUEUE
        ///REMOTE_SERVICE_BINDING
        ///ROLE
        ///ROUTE
        ///SCHEMA
        ///SERVICE
        ///SYMMETRIC_KEY
        ///TABLE
        ///TRIGGER
        ///USER
        ///VIEW
        ///XML_SCHEMA_COLLECTION.
        /// </summary>
        internal static string ddlAlterEvents2008 {
            get {
                return ResourceManager.GetString("ddlAlterEvents2008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to APPLICATION_ROLE
        ///ASSEMBLY
        ///CERTIFICATE
        ///CONTRACT
        ///EVENT_NOTIFICATION
        ///FUNCTION
        ///INDEX
        ///MESSAGE_TYPE
        ///PARTITION_FUNCTION
        ///PARTITION_SCHEME
        ///PROCEDURE
        ///QUEUE
        ///REMOTE_SERVICE_BINDING
        ///ROLE
        ///ROUTE
        ///SCHEMA
        ///SERVICE
        ///STATISTICS
        ///SYNONYM
        ///TABLE
        ///TRIGGER
        ///TYPE
        ///USER
        ///VIEW
        ///XML_INDEX
        ///XML_SCHEMA_COLLECTION.
        /// </summary>
        internal static string ddlCreateEvents2005 {
            get {
                return ResourceManager.GetString("ddlCreateEvents2005", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to APPLICATION_ROLE
        ///ASSEMBLY
        ///ASYMMETRIC_KEY
        ///CERTIFICATE
        ///CONTRACT
        ///DEFAULT
        ///EVENT_NOTIFICATION
        ///EXTENDED_PROPERTY
        ///FULLTEXT_CATALOG
        ///FULLTEXT_INDEX
        ///FUNCTION
        ///INDEX
        ///MASTER_KEY
        ///MESSAGE_TYPE
        ///PARTITION_FUNCTION
        ///PARTITION_SCHEME
        ///PLAN_GUIDE
        ///PROCEDURE
        ///QUEUE
        ///REMOTE_SERVICE_BINDING
        ///ROLE
        ///ROUTE
        ///RULE
        ///SCHEMA
        ///SERVICE
        ///SPATIAL_INDEX
        ///STATISTICS
        ///SYMMETRIC_KEY
        ///SYNONYM
        ///TABLE
        ///TRIGGER
        ///TYPE
        ///USER
        ///VIEW
        ///XML_INDEX
        ///XML_SCHEMA_COLLECTION.
        /// </summary>
        internal static string ddlCreateEvents2008 {
            get {
                return ResourceManager.GetString("ddlCreateEvents2008", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to APPLICATION_ROLE
        ///ASSEMBLY
        ///CERTIFICATE
        ///CONTRACT
        ///EVENT_NOTIFICATION
        ///FUNCTION
        ///INDEX
        ///MESSAGE_TYPE
        ///PARTITION_FUNCTION
        ///PARTITION_SCHEME
        ///PROCEDURE
        ///QUEUE
        ///REMOTE_SERVICE_BINDING
        ///ROLE
        ///ROUTE
        ///SCHEMA
        ///SERVICE
        ///STATISTICS
        ///SYNONYM
        ///TABLE
        ///TRIGGER
        ///TYPE
        ///USER
        ///VIEW
        ///XML_SCHEMA_COLLECTION.
        /// </summary>
        internal static string ddlDropEvents2005 {
            get {
                return ResourceManager.GetString("ddlDropEvents2005", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to APPLICATION_ROLE
        ///ASSEMBLY
        ///ASYMMETRIC_KEY
        ///CERTIFICATE
        ///CONTRACT
        ///DEFAULT
        ///EVENT_NOTIFICATION
        ///EXTENDED_PROPERTY
        ///FULLTEXT_CATALOG
        ///FULLTEXT_INDEX
        ///FUNCTION
        ///INDEX
        ///MASTER_KEY
        ///MESSAGE_TYPE
        ///PARTITION_FUNCTION
        ///PARTITION_SCHEME
        ///PLAN_GUIDE
        ///PROCEDURE
        ///QUEUE
        ///REMOTE_SERVICE_BINDING
        ///ROLE
        ///ROLE_MEMBER
        ///ROUTE
        ///RULE
        ///SCHEMA
        ///SERVICE
        ///STATISTICS
        ///SYMMETRIC_KEY
        ///SYNONYM
        ///TABLE
        ///TRIGGER
        ///TYPE
        ///USER
        ///VIEW
        ///XML_SCHEMA_COLLECTION.
        /// </summary>
        internal static string ddlDropEvents2008 {
            get {
                return ResourceManager.GetString("ddlDropEvents2008", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Delete {
            get {
                object obj = ResourceManager.GetObject("Delete", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Disconnect {
            get {
                object obj = ResourceManager.GetObject("Disconnect", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap DisconnectAll {
            get {
                object obj = ResourceManager.GetObject("DisconnectAll", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap DoubleDrop {
            get {
                object obj = ResourceManager.GetObject("DoubleDrop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap DoubleExecute {
            get {
                object obj = ResourceManager.GetObject("DoubleExecute", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Drop {
            get {
                object obj = ResourceManager.GetObject("Drop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap DropAndCreate {
            get {
                object obj = ResourceManager.GetObject("DropAndCreate", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap DropAssembly {
            get {
                object obj = ResourceManager.GetObject("DropAssembly", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap DropChildObjects {
            get {
                object obj = ResourceManager.GetObject("DropChildObjects", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap DropFile {
            get {
                object obj = ResourceManager.GetObject("DropFile", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap DropKey {
            get {
                object obj = ResourceManager.GetObject("DropKey", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Edit {
            get {
                object obj = ResourceManager.GetObject("Edit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap EditServer {
            get {
                object obj = ResourceManager.GetObject("EditServer", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are pending actions associated with this database: you cannot hide a database which has actions pending. You should cancel or execute the pending actions first..
        /// </summary>
        internal static string errCantHideDatabaseWithPendingActions {
            get {
                return ResourceManager.GetString("errCantHideDatabaseWithPendingActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identifiers must contain at least one character..
        /// </summary>
        internal static string errEmptyStringNotAValidName {
            get {
                return ResourceManager.GetString("errEmptyStringNotAValidName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already an object called [%NEWVALUE%] in database [%DATABASE%] on [%SERVER%]..
        /// </summary>
        internal static string errNameAlreadyExistsAfterLabelEdit {
            get {
                return ResourceManager.GetString("errNameAlreadyExistsAfterLabelEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already an object called [%NEWVALUE%] in assembly [%ASSEMBLY%]..
        /// </summary>
        internal static string errNameAlreadyExistsInLibraryAfterLabelEdit {
            get {
                return ResourceManager.GetString("errNameAlreadyExistsInLibraryAfterLabelEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is currently no open connection to server %SERVER% - please connect to %SERVER% first..
        /// </summary>
        internal static string errNoServerToExecuteAgainst {
            get {
                return ResourceManager.GetString("errNoServerToExecuteAgainst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This action is internal to the CLR Assembly Manager tool and does not require anything to happen on the SQL server..
        /// </summary>
        internal static string errNothingToDoOnSql {
            get {
                return ResourceManager.GetString("errNothingToDoOnSql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly %ASSEMBLY1% references an assembly named %ASSEMBLY2%, which must be added first. .
        /// </summary>
        internal static string errReferencedAssemblyMustBeLoadedFirst {
            get {
                return ResourceManager.GetString("errReferencedAssemblyMustBeLoadedFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly %ASSEMBLY1% cannot be downloaded because it references assembly %ASSEMBLY2%, which cannot be found. Please ensure that %ASSEMBLY2% is available on this machine or add it to the database..
        /// </summary>
        internal static string errReferencedAssemblyNotFoundInDatabase {
            get {
                return ResourceManager.GetString("errReferencedAssemblyNotFoundInDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You cannot directly specify a new schema for a trigger function: the schema follows from the target object (database, table or view)..
        /// </summary>
        internal static string errSchemaCannotBeSetForTriggers {
            get {
                return ResourceManager.GetString("errSchemaCannotBeSetForTriggers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The schema [%NEWVALUE%] does not exist in database [%DATABASE%] on [%SERVER%]..
        /// </summary>
        internal static string errSchemaNotFoundAfterLabelEdit {
            get {
                return ResourceManager.GetString("errSchemaNotFoundAfterLabelEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to select an assembly before you can add other files to it..
        /// </summary>
        internal static string errSelectAssemblyBeforeAddingFile {
            get {
                return ResourceManager.GetString("errSelectAssemblyBeforeAddingFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &quot;%FILE%&quot; is not a valid .NET assembly. If you wish to add it as an associated file you must add it directly to an existing assembly..
        /// </summary>
        internal static string errSelectedFileNotAValidAssembly {
            get {
                return ResourceManager.GetString("errSelectedFileNotAValidAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Common Language Runtime (CLR) functionality was introduced in SQL Server 2005 - earlier versions of SQL Server do not support it. The server you have selected is running %VERSION%. .
        /// </summary>
        internal static string errSqlVersionNotSupported {
            get {
                return ResourceManager.GetString("errSqlVersionNotSupported", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Execute {
            get {
                object obj = ResourceManager.GetObject("Execute", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ExecuteToHere {
            get {
                object obj = ResourceManager.GetObject("ExecuteToHere", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Export {
            get {
                object obj = ResourceManager.GetObject("Export", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ExternalAssembly {
            get {
                object obj = ResourceManager.GetObject("ExternalAssembly", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap File {
            get {
                object obj = ResourceManager.GetObject("File", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap HideDatabase {
            get {
                object obj = ResourceManager.GetObject("HideDatabase", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap HideDatabase1 {
            get {
                object obj = ResourceManager.GetObject("HideDatabase1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ImportAssembly {
            get {
                object obj = ResourceManager.GetObject("ImportAssembly", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ImportFile {
            get {
                object obj = ResourceManager.GetObject("ImportFile", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Insert {
            get {
                object obj = ResourceManager.GetObject("Insert", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap InstallAllChildren {
            get {
                object obj = ResourceManager.GetObject("InstallAllChildren", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Key {
            get {
                object obj = ResourceManager.GetObject("Key", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The associated file &quot;%FILE%&quot; already exists for assembly &quot;%ASSEMBLY%&quot;..
        /// </summary>
        internal static string mbxAssociatedFileAlreadyExists {
            get {
                return ResourceManager.GetString("mbxAssociatedFileAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure?.
        /// </summary>
        internal static string mbxCancelAllActionsPrompt {
            get {
                return ResourceManager.GetString("mbxCancelAllActionsPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are actions pending against this server which will be cancelled if it is disconnected. Are you sure you wish to proceed?.
        /// </summary>
        internal static string mbxCancelSvrActionsPrompt {
            get {
                return ResourceManager.GetString("mbxCancelSvrActionsPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: all unsaved pending actions will be lost - do you wish to continue?.
        /// </summary>
        internal static string mbxDisconnectAllWithPendingActions {
            get {
                return ResourceManager.GetString("mbxDisconnectAllWithPendingActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add function.
        /// </summary>
        internal static string mbxDragFunctionIntoExistingAssemblyTitle {
            get {
                return ResourceManager.GetString("mbxDragFunctionIntoExistingAssemblyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly [%ASSEMBLY%] and %TYPE% %FUNCTION% are already installed or marked for installation in database [%DATABASE%]..
        /// </summary>
        internal static string mbxDragFunctionIntoExistingAssemblyWhereAlreadyInstalledPrompt {
            get {
                return ResourceManager.GetString("mbxDragFunctionIntoExistingAssemblyWhereAlreadyInstalledPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Function %FUNCTION% is already installed but currently marked for removal in database [%DATABASE%]. Do you wish to cancel the action to remove it?.
        /// </summary>
        internal static string mbxDragFunctionIntoExistingAssemblyWherePendingRemovePrompt {
            get {
                return ResourceManager.GetString("mbxDragFunctionIntoExistingAssemblyWherePendingRemovePrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have selected only one item (%FUNCTION%) from the new version of assembly [%ASSEMBLY%], but there are %OLDVALUE% other installed items in the current version. Do you wish to install matching items from the new version ?.
        /// </summary>
        internal static string mbxDragFunctionIntoExistingNonIdenticalAssemblyPrompt {
            get {
                return ResourceManager.GetString("mbxDragFunctionIntoExistingNonIdenticalAssemblyPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: If you drop the asymmetric key and associated login for assemblies with public key token %THUMBPRINT% from server [%SERVER%] the following assemblies will be unable to run:
        ///.
        /// </summary>
        internal static string mbxDropKeyAndLogin {
            get {
                return ResourceManager.GetString("mbxDropKeyAndLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press OK to go ahead and commit all pending actions on the server(s)..
        /// </summary>
        internal static string mbxExecuteAllActionsPrompt {
            get {
                return ResourceManager.GetString("mbxExecuteAllActionsPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: [%TYPE%] [%FUNCTION%]  has a different signature in version [%NEWVALUE%] of assembly [%ASSEMBLY%] from that in version [%OLDVALUE%]. It will be dropped and re-created using the new definition..
        /// </summary>
        internal static string mbxFunctionDiffersInNewAssemblyVersionPrompt {
            get {
                return ResourceManager.GetString("mbxFunctionDiffersInNewAssemblyVersionPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace assembly: object signature is different.
        /// </summary>
        internal static string mbxFunctionDiffersInNewAssemblyVersionTitle {
            get {
                return ResourceManager.GetString("mbxFunctionDiffersInNewAssemblyVersionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: [%TYPE%] [%FUNCTION%]  is not defined in version [%NEWVALUE%] of assembly [%ASSEMBLY%] - it will be dropped..
        /// </summary>
        internal static string mbxFunctionNotInNewAssemblyVersionPrompt {
            get {
                return ResourceManager.GetString("mbxFunctionNotInNewAssemblyVersionPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace assembly: object not defined.
        /// </summary>
        internal static string mbxFunctionNotInNewAssemblyVersionTitle {
            get {
                return ResourceManager.GetString("mbxFunctionNotInNewAssemblyVersionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An object with the name [%FUNCTION%] already exists in database [%DATABASE%], so this will not be added..
        /// </summary>
        internal static string mbxFunctionWithSameNameAlreadyExistsPrompt {
            get {
                return ResourceManager.GetString("mbxFunctionWithSameNameAlreadyExistsPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Object with same name already exists.
        /// </summary>
        internal static string mbxFunctionWithSameNameAlreadyExistsTitle {
            get {
                return ResourceManager.GetString("mbxFunctionWithSameNameAlreadyExistsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly %ASSEMBLY%, version %VERSION% in database %DATABASE% is already installed or marked for installation..
        /// </summary>
        internal static string mbxIdenticalAssemblyAlreadyInstalledPrompt {
            get {
                return ResourceManager.GetString("mbxIdenticalAssemblyAlreadyInstalledPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Identical assembly already in place..
        /// </summary>
        internal static string mbxIdenticalAssemblyAlreadyInstalledTitle {
            get {
                return ResourceManager.GetString("mbxIdenticalAssemblyAlreadyInstalledTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you wish to remove the open pending actions first?.
        /// </summary>
        internal static string mbxLoadActionsOverOthersPrompt {
            get {
                return ResourceManager.GetString("mbxLoadActionsOverOthersPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly %ASSEMBLY1% references assembly %ASSEMBLY2% so this will be added as well..
        /// </summary>
        internal static string mbxLoadReferencedAssembly {
            get {
                return ResourceManager.GetString("mbxLoadReferencedAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The imported library [%LIBRARY%] contains [%COMPARE%] version of existing assembly [%ASSEMBLY%]. Do you want to replace the current version with it?.
        /// </summary>
        internal static string mbxMergeLibraryNonIdenticalAssemblyExistsPrompt {
            get {
                return ResourceManager.GetString("mbxMergeLibraryNonIdenticalAssemblyExistsPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move all child objects in schema [%OLDVALUE%] to schema [%NEWVALUE%]?.
        /// </summary>
        internal static string mbxMoveAllObjectsToNewSchemaPrompt {
            get {
                return ResourceManager.GetString("mbxMoveAllObjectsToNewSchemaPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change default schema.
        /// </summary>
        internal static string mbxMoveAllObjectsToNewSchemaTitle {
            get {
                return ResourceManager.GetString("mbxMoveAllObjectsToNewSchemaTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To set the permission set for strong-named assembly [%ASSEMBLY%] to %PERMISSION% you must EITHER add an asymmetric key and associated login id OR set the TRUSTWORTHY flag for database [%DATABASE%] to ON. 
        ///
        ///Do you want to want to add an asmmetric key and associated login id (recommended) ?.
        /// </summary>
        internal static string mbxNeedToAddLogin {
            get {
                return ResourceManager.GetString("mbxNeedToAddLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To set the permission set for strong-named assembly [%ASSEMBLY%] to %PERMISSION% you must EITHER add the %PERMISSION% ASSEMBLY permission to the associated login id OR set the TRUSTWORTHY flag for database [%DATABASE%] to ON. 
        ///
        ///Do you want to want to add the %PERMISSION% ASSEMBLY permission to the associated login id (recommended) ?.
        /// </summary>
        internal static string mbxNeedToAddPermission {
            get {
                return ResourceManager.GetString("mbxNeedToAddPermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To set the permission set for unsigned assembly [%ASSEMBLY%] to %PERMISSION% the TRUSTWORTHY flag for database [%DATABASE%] must be set to ON. 
        ///
        ///Click OK to add that as an action..
        /// </summary>
        internal static string mbxNeedToSetTrustworthy {
            get {
                return ResourceManager.GetString("mbxNeedToSetTrustworthy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace assembly %ASSEMBLY%, version %OLDVERSION%, created %OLDDATE% with assembly %ASSEMBLY%, version %NEWVERSION%, created %NEWDATE% in database %DATABASE% ?.
        /// </summary>
        internal static string mbxNonIdenticalAssemblyAlreadyInstalledPrompt {
            get {
                return ResourceManager.GetString("mbxNonIdenticalAssemblyAlreadyInstalledPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace existing installed assembly?.
        /// </summary>
        internal static string mbxNonIdenticalAssemblyAlreadyInstalledTitle {
            get {
                return ResourceManager.GetString("mbxNonIdenticalAssemblyAlreadyInstalledTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: if you execute from a script there is no automatic roll-back available. Are you sure you wish to proceed?.
        /// </summary>
        internal static string mbxNoRollbackWithScriptExecution {
            get {
                return ResourceManager.GetString("mbxNoRollbackWithScriptExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value you supplied (%VALUE%) is not recognised as a valid %TYPE% (n.b. avoid putting &apos;single quotes&apos; in string values)..
        /// </summary>
        internal static string mbxParameterDefaultValueDoesntParsePrompt {
            get {
                return ResourceManager.GetString("mbxParameterDefaultValueDoesntParsePrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly %ASSEMBLY1% references assembly %ASSEMBLY2% which cannot be located - please restore a copy of that assembly to the database first..
        /// </summary>
        internal static string mbxReferenceAssemblyCannotBeRecovered {
            get {
                return ResourceManager.GetString("mbxReferenceAssemblyCannotBeRecovered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly %ASSEMBLY1% references a different version (%VERSION1%) of assembly %ASSEMBLY2% from the one installed in database [%DATABASE%] (version %VERSION2%). Do you wish to replace the installed version with %VERSION1% ?.
        /// </summary>
        internal static string mbxReferencedAssemblyIsDifferentVersionInDB {
            get {
                return ResourceManager.GetString("mbxReferencedAssemblyIsDifferentVersionInDB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly %ASSEMBLY1% references dropped assembly %ASSEMBLY2%, so this will be recovered as well..
        /// </summary>
        internal static string mbxReferencedAssemblyMustBeRecovered {
            get {
                return ResourceManager.GetString("mbxReferencedAssemblyMustBeRecovered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The library at [%FILE%] is already open. Do you wish to reload it from the saved copy (changes will be lost) ?.
        /// </summary>
        internal static string mbxReloadLibraryPrompt {
            get {
                return ResourceManager.GetString("mbxReloadLibraryPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly %ASSEMBLY1%  is referenced by %ASSEMBLY2% which must therefore also be removed - do you wish to remove %ASSEMBLY2% ?.
        /// </summary>
        internal static string mbxRemoveDependentAssemblyPrompt {
            get {
                return ResourceManager.GetString("mbxRemoveDependentAssemblyPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save changes before closing?.
        /// </summary>
        internal static string mbxSaveLibraryChangesPrompt {
            get {
                return ResourceManager.GetString("mbxSaveLibraryChangesPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You already have an open connection to server %SERVER%: you can only have one connection per server at any one time..
        /// </summary>
        internal static string mbxServerAlreadyConnected {
            get {
                return ResourceManager.GetString("mbxServerAlreadyConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to set the TRUSTWORTHY flag for database [%DATABASE%] to ON ?.
        /// </summary>
        internal static string mbxThenNeedToSetTrustworthy {
            get {
                return ResourceManager.GetString("mbxThenNeedToSetTrustworthy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: CLR is not enabled on this server - you can install CLR assemblies and functions but they will not run until CLR is enabled..
        /// </summary>
        internal static string mbxWarningCLRDisabledPrompt {
            get {
                return ResourceManager.GetString("mbxWarningCLRDisabledPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Warning: database [%DATABASE%] has the Trustworthy option turned OFF - you can only install an EXTERNAL_ACCESS or UNRESTRICTED assembly if trustworthy is set to ON or the assembly is signed with a certificate or asymmetric key with a corresponding login with EXTERNAL ACCESS ASSEMBLY permission..
        /// </summary>
        internal static string mbxWarningTrustworthyOffPrompt {
            get {
                return ResourceManager.GetString("mbxWarningTrustworthyOffPrompt", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap Merge_Library {
            get {
                object obj = ResourceManager.GetObject("Merge_Library", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script %TYPE% As.
        /// </summary>
        internal static string mnuScriptAs {
            get {
                return ResourceManager.GetString("mnuScriptAs", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap New_Library {
            get {
                object obj = ResourceManager.GetObject("New_Library", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Open {
            get {
                object obj = ResourceManager.GetObject("Open", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Parameters {
            get {
                object obj = ResourceManager.GetObject("Parameters", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap PasteHS {
            get {
                object obj = ResourceManager.GetObject("PasteHS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Process {
            get {
                object obj = ResourceManager.GetObject("Process", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Properties {
            get {
                object obj = ResourceManager.GetObject("Properties", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Red_Arrow {
            get {
                object obj = ResourceManager.GetObject("Red_Arrow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Refresh {
            get {
                object obj = ResourceManager.GetObject("Refresh", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap RefreshAll {
            get {
                object obj = ResourceManager.GetObject("RefreshAll", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap RoleMember {
            get {
                object obj = ResourceManager.GetObject("RoleMember", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Rollback {
            get {
                object obj = ResourceManager.GetObject("Rollback", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap RollbackAll {
            get {
                object obj = ResourceManager.GetObject("RollbackAll", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap RollbackDownToHere {
            get {
                object obj = ResourceManager.GetObject("RollbackDownToHere", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap RollbackToHere {
            get {
                object obj = ResourceManager.GetObject("RollbackToHere", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap rule {
            get {
                object obj = ResourceManager.GetObject("rule", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SafeAssembly {
            get {
                object obj = ResourceManager.GetObject("SafeAssembly", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SafeAssembly2 {
            get {
                object obj = ResourceManager.GetObject("SafeAssembly2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Save {
            get {
                object obj = ResourceManager.GetObject("Save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Save_All {
            get {
                object obj = ResourceManager.GetObject("Save_All", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Schema {
            get {
                object obj = ResourceManager.GetObject("Schema", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap script {
            get {
                object obj = ResourceManager.GetObject("script", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ScriptAsExecute {
            get {
                object obj = ResourceManager.GetObject("ScriptAsExecute", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ScriptAsRollback {
            get {
                object obj = ResourceManager.GetObject("ScriptAsRollback", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ScriptToClipboard {
            get {
                object obj = ResourceManager.GetObject("ScriptToClipboard", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ScriptToDisk {
            get {
                object obj = ResourceManager.GetObject("ScriptToDisk", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ScriptToSSMS {
            get {
                object obj = ResourceManager.GetObject("ScriptToSSMS", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Search_button {
            get {
                object obj = ResourceManager.GetObject("Search_button", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Search_button1 {
            get {
                object obj = ResourceManager.GetObject("Search_button1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Select {
            get {
                object obj = ResourceManager.GetObject("Select", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SQL {
            get {
                object obj = ResourceManager.GetObject("SQL", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALTER ASSEMBLY [%ASSEMBLY%] ADD FILE FROM %ASSEMBLYBYTES% AS &apos;%FILE%&apos;.
        /// </summary>
        internal static string sqlAddFile {
            get {
                return ResourceManager.GetString("sqlAddFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DECLARE @SID varbinary(100)
        ///IF NOT EXISTS (SELECT * FROM sys.asymmetric_keys WHERE thumbprint = %THUMBPRINT%)
        ///BEGIN
        ///	CREATE ASSEMBLY [%ASSEMBLY%]
        ///	FROM %ASSEMBLYBYTES%
        ///	WITH PERMISSION_SET = SAFE
        ///	CREATE ASYMMETRIC KEY [%KEY%] FROM ASSEMBLY [%ASSEMBLY%]
        ///	DROP ASSEMBLY [%ASSEMBLY%]
        ///END
        ///SET @SID = (SELECT sid FROM sys.asymmetric_keys WHERE thumbprint = %THUMBPRINT%)
        ///IF NOT EXISTS (SELECT * FROM sys.server_principals WHERE sid = @sid)
        ///BEGIN
        ///	CREATE LOGIN [%LOGIN%] FROM ASYMMETRIC KEY %KEY%   	
        ///	GRA [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sqlAddKeyAndLogin {
            get {
                return ResourceManager.GetString("sqlAddKeyAndLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GRANT %PERMISSION% ASSEMBLY TO [%LOGIN%].
        /// </summary>
        internal static string sqlAddPermission {
            get {
                return ResourceManager.GetString("sqlAddPermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  UserDefinedFunction %FUNCTION%    Script Date: %DATE% ******/
        ///ALTER FUNCTION %FUNCTION%(%PARMLIST%)
        ///RETURNS %RETURNTYPE% WITH EXECUTE AS CALLER
        ///AS 
        ///EXTERNAL NAME [%ASSEMBLY%].[%CLASS%].[%FUNCTIONENTRYPOINT%].
        /// </summary>
        internal static string sqlAlterFunction {
            get {
                return ResourceManager.GetString("sqlAlterFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  StoredProcedure %FUNCTION%    Script Date: %DATE% ******/
        ///ALTER PROCEDURE %FUNCTION%
        ///	%PARMLIST%
        ///WITH EXECUTE AS CALLER
        ///AS
        ///EXTERNAL NAME [%ASSEMBLY%].[%CLASS%].[%FUNCTIONENTRYPOINT%].
        /// </summary>
        internal static string sqlAlterProcedure {
            get {
                return ResourceManager.GetString("sqlAlterProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  Trigger %FUNCTION%    Script Date: %DATE% ******/
        ///ALTER TRIGGER %FUNCTION% ON %TARGET% %EVENT% AS 
        ///EXTERNAL NAME [%ASSEMBLY%].[%CLASS%].[%FUNCTIONENTRYPOINT%].
        /// </summary>
        internal static string sqlAlterTrigger {
            get {
                return ResourceManager.GetString("sqlAlterTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALTER ASSEMBLY [%ASSEMBLY%]
        ///WITH PERMISSION_SET = %PERMISSIONSET%.
        /// </summary>
        internal static string sqlChangePermissionSet {
            get {
                return ResourceManager.GetString("sqlChangePermissionSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  UserDefinedAggregate %FUNCTION%    Script Date: %DATE% ******/
        ///CREATE AGGREGATE %FUNCTION%(%PARMLIST%)
        ///RETURNS %RETURNTYPE%
        ///EXTERNAL NAME [%ASSEMBLY%].[%CLASS%]
        ///GO
        ///
        ///EXEC sys.sp_addextendedproperty @name=N&apos;AutoDeployed&apos;, @value=N&apos;yes&apos; , @level0type=N&apos;SCHEMA&apos;,@level0name=N&apos;%SCHEMA%&apos;, @level1type=N&apos;AGGREGATE&apos;,@level1name=N&apos;%RAWFUNCTION%&apos;.
        /// </summary>
        internal static string sqlCreateAggregate {
            get {
                return ResourceManager.GetString("sqlCreateAggregate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  SqlAssembly [%ASSEMBLY%]    Script Date: %DATE% ******/
        ///CREATE ASSEMBLY [%ASSEMBLY%]
        ///FROM %ASSEMBLYBYTES%
        ///WITH PERMISSION_SET = %PERMISSIONSET%
        ///GO
        ///
        ///EXEC sys.sp_addextendedproperty @name=N&apos;AutoDeployed&apos;, @value=N&apos;yes&apos; , @level0type=N&apos;ASSEMBLY&apos;,@level0name=N&apos;%ASSEMBLY%&apos;.
        /// </summary>
        internal static string sqlCreateAssembly {
            get {
                return ResourceManager.GetString("sqlCreateAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  Trigger %FUNCTION%    Script Date: %DATE% ******/
        ///CREATE TRIGGER %FUNCTION% ON %TARGET%  %EVENT% AS 
        ///EXTERNAL NAME [%ASSEMBLY%].[%CLASS%].[%FUNCTIONENTRYPOINT%]
        ///GO
        ///
        ///EXEC sys.sp_addextendedproperty @name=N&apos;AutoDeployed&apos;, @value=N&apos;yes&apos;, @level0type=N&apos;TRIGGER&apos;, @level0name=N&apos;%RAWFUNCTION%&apos;.
        /// </summary>
        internal static string sqlCreateDatabaseTrigger {
            get {
                return ResourceManager.GetString("sqlCreateDatabaseTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  UserDefinedFunction %FUNCTION%    Script Date: %DATE% ******/
        ///CREATE FUNCTION %FUNCTION%(%PARMLIST%)
        ///RETURNS %RETURNTYPE% WITH EXECUTE AS CALLER
        ///AS 
        ///EXTERNAL NAME [%ASSEMBLY%].[%CLASS%].[%FUNCTIONENTRYPOINT%]
        ///GO
        ///
        ///EXEC sys.sp_addextendedproperty @name=N&apos;AutoDeployed&apos;, @value=N&apos;yes&apos; , @level0type=N&apos;SCHEMA&apos;,@level0name=N&apos;%SCHEMA%&apos;, @level1type=N&apos;FUNCTION&apos;,@level1name=N&apos;%RAWFUNCTION%&apos;.
        /// </summary>
        internal static string sqlCreateFunction {
            get {
                return ResourceManager.GetString("sqlCreateFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  StoredProcedure %FUNCTION%    Script Date: %DATE% ******/
        ///CREATE PROCEDURE %FUNCTION% %PARMLIST%
        ///WITH EXECUTE AS CALLER
        ///AS
        ///EXTERNAL NAME [%ASSEMBLY%].[%CLASS%].[%FUNCTIONENTRYPOINT%]
        ///GO
        ///
        ///EXEC sys.sp_addextendedproperty @name=N&apos;AutoDeployed&apos;, @value=N&apos;yes&apos; , @level0type=N&apos;SCHEMA&apos;,@level0name=N&apos;%SCHEMA%&apos;, @level1type=N&apos;PROCEDURE&apos;,@level1name=N&apos;%RAWFUNCTION%&apos;.
        /// </summary>
        internal static string sqlCreateProcedure {
            get {
                return ResourceManager.GetString("sqlCreateProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  Trigger %FUNCTION%    Script Date: %DATE% ******/
        ///CREATE TRIGGER %FUNCTION% ON %TARGET%  %EVENT% AS 
        ///EXTERNAL NAME [%ASSEMBLY%].[%CLASS%].[%FUNCTIONENTRYPOINT%].
        /// </summary>
        internal static string sqlCreateTrigger {
            get {
                return ResourceManager.GetString("sqlCreateTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  UserDefinedType %FUNCTION%    Script Date: %DATE% ******/
        ///CREATE TYPE %FUNCTION%
        ///EXTERNAL NAME [%ASSEMBLY%].[%CLASS%]
        ///GO
        ///
        ///EXEC sys.sp_addextendedproperty @name=N&apos;AutoDeployed&apos;, @value=N&apos;yes&apos; , @level0type=N&apos;SCHEMA&apos;,@level0name=N&apos;%SCHEMA%&apos;, @level1type=N&apos;TYPE&apos;,@level1name=N&apos;%RAWFUNCTION%&apos;.
        /// </summary>
        internal static string sqlCreateType {
            get {
                return ResourceManager.GetString("sqlCreateType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  UserDefinedAggregate %FUNCTION%    Script Date: %DATE% ******/
        ///IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;%FUNCTION%&apos;) AND type = N&apos;AF&apos;)
        ///DROP AGGREGATE %FUNCTION%.
        /// </summary>
        internal static string sqlDropAggregate {
            get {
                return ResourceManager.GetString("sqlDropAggregate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  SqlAssembly [%ASSEMBLY%]    Script Date: %DATE% ******/
        ///IF  EXISTS (SELECT * FROM sys.assemblies asms WHERE asms.name = N&apos;%ASSEMBLY%&apos;)
        ///DROP ASSEMBLY [%ASSEMBLY%].
        /// </summary>
        internal static string sqlDropAssembly {
            get {
                return ResourceManager.GetString("sqlDropAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF  EXISTS (SELECT * FROM sys.triggers WHERE parent_class_desc = &apos;DATABASE&apos; AND name = N&apos;%RAWFUNCTION%&apos;) DROP TRIGGER %FUNCTION% ON DATABASE.
        /// </summary>
        internal static string sqlDropDatabaseTrigger {
            get {
                return ResourceManager.GetString("sqlDropDatabaseTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to alter assembly [%ASSEMBLY%] drop file &apos;%FILE%&apos;.
        /// </summary>
        internal static string sqlDropFile {
            get {
                return ResourceManager.GetString("sqlDropFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  UserDefinedFunction %FUNCTION%    Script Date: %DATE% ******/
        ///IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;%FUNCTION%&apos;) AND type in (N&apos;FN&apos;, N&apos;IF&apos;, N&apos;TF&apos;, N&apos;FS&apos;, N&apos;FT&apos;))
        ///DROP FUNCTION %FUNCTION%.
        /// </summary>
        internal static string sqlDropFunction {
            get {
                return ResourceManager.GetString("sqlDropFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF  EXISTS (SELECT * FROM sys.server_principals WHERE name = &apos;%LOGIN%&apos;) DROP LOGIN [%LOGIN%]
        ///IF EXISTS (SELECT * FROM sys.asymmetric_keys WHERE name = &apos;%KEY%&apos;) DROP ASYMMETRIC KEY [%KEY%].
        /// </summary>
        internal static string sqlDropKeyAndLogin {
            get {
                return ResourceManager.GetString("sqlDropKeyAndLogin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to REVOKE %PERMISSION% ASSEMBLY FROM [%LOGIN%].
        /// </summary>
        internal static string sqlDropPermission {
            get {
                return ResourceManager.GetString("sqlDropPermission", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  StoredProcedure %FUNCTION%    Script Date: %DATE% ******/
        ///IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N&apos;%FUNCTION%&apos;) AND type in (N&apos;P&apos;, N&apos;PC&apos;))
        ///DROP PROCEDURE %FUNCTION%.
        /// </summary>
        internal static string sqlDropProcedure {
            get {
                return ResourceManager.GetString("sqlDropProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  Trigger %FUNCTION%    Script Date: %DATE% ******/
        ///IF  EXISTS (SELECT * FROM sys.triggers WHERE object_id = OBJECT_ID(N&apos;%FUNCTION%&apos;))
        ///DROP TRIGGER %FUNCTION%.
        /// </summary>
        internal static string sqlDropTrigger {
            get {
                return ResourceManager.GetString("sqlDropTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  UserDefinedType %FUNCTION%    Script Date: %DATE% ******/
        ///IF  EXISTS (SELECT * FROM sys.assembly_types at INNER JOIN sys.schemas ss on at.schema_id = ss.schema_id WHERE at.name = N&apos;%RAWFUNCTION%&apos; AND ss.name=N&apos;%SCHEMA%&apos;)
        ///DROP TYPE %FUNCTION%.
        /// </summary>
        internal static string sqlDropType {
            get {
                return ResourceManager.GetString("sqlDropType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXECUTE [%DATABASE%].%FUNCTION%   %PARMLIST%.
        /// </summary>
        internal static string sqlExecuteProcedure {
            get {
                return ResourceManager.GetString("sqlExecuteProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select	a.name as assembly_name, 
        ///		a.permission_set, 
        ///		o.object_id, 
        ///		o.name as function_name, 
        ///		o.[type], 
        ///		s.name as [schema], 
        ///		a.clr_name, 
        ///		a.create_date, 
        ///		a.modify_date, 
        ///		a.is_visible, 
        ///		a.assembly_id, 
        ///		am.assembly_class, 
        ///		am.assembly_method 
        ///from [%DATABASE%].sys.assemblies a 
        ///	left join [%DATABASE%].sys.assembly_modules am on a.assembly_id = am.assembly_id
        ///	left join [%DATABASE%].sys.all_objects o on o.object_id = am.object_id
        ///	left join [%DATABASE%].sys.schemas s on o [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sqlGetAssembliesAndFunctions {
            get {
                return ResourceManager.GetString("sqlGetAssembliesAndFunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select content from [%DATABASE%].sys.assembly_files where assembly_id = %ASSEMBLY_ID% and name = &apos;%ASSEMBLY%&apos;.
        /// </summary>
        internal static string sqlGetAssemblyBytes {
            get {
                return ResourceManager.GetString("sqlGetAssemblyBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * 
        ///from [%DATABASE%].sys.assembly_files
        ///where file_id &gt; 1.
        /// </summary>
        internal static string sqlGetAssociatedFiles {
            get {
                return ResourceManager.GetString("sqlGetAssociatedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * from master.sys.asymmetric_keys;.
        /// </summary>
        internal static string sqlGetAsymmetricKeys {
            get {
                return ResourceManager.GetString("sqlGetAsymmetricKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select value_in_use from sys.configurations where name = &apos;clr enabled&apos;.
        /// </summary>
        internal static string sqlGetClrEnabled {
            get {
                return ResourceManager.GetString("sqlGetClrEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select table_catalog, table_schema, table_name, column_name, ordinal_position, data_type, character_maximum_length from [%DATABASE%].INFORMATION_SCHEMA.ROUTINE_COLUMNS order by  table_catalog, table_schema, table_name, ordinal_position.
        /// </summary>
        internal static string sqlGetColumns {
            get {
                return ResourceManager.GetString("sqlGetColumns", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select name, is_trustworthy_on from sys.databases.
        /// </summary>
        internal static string sqlGetDatabases {
            get {
                return ResourceManager.GetString("sqlGetDatabases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * FROM [%DATABASE%].sys.fn_my_permissions(null, &apos;DATABASE&apos;) where permission_name in 
        ///(&apos;CREATE ASSEMBLY&apos;, &apos;CREATE TYPE&apos;, &apos;CREATE AGGREGATE&apos;, &apos;CREATE FUNCTION&apos;, &apos;CREATE PROCEDURE&apos;, &apos;CREATE RULE&apos;, &apos;CREATE DATABASE DDL EVENT NOTIFICATION&apos;, &apos;ALTER ANY ASSEMBLY&apos;, &apos;ALTER ANY DATABASE DDL TRIGGER&apos;);.
        /// </summary>
        internal static string sqlGetDBPermissions {
            get {
                return ResourceManager.GetString("sqlGetDBPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT SERVERPROPERTY (&apos;edition&apos;).
        /// </summary>
        internal static string sqlGetEdition {
            get {
                return ResourceManager.GetString("sqlGetEdition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select IS_SRVROLEMEMBER(&apos;sysadmin&apos;);.
        /// </summary>
        internal static string sqlGetIsSysAdmin {
            get {
                return ResourceManager.GetString("sqlGetIsSysAdmin", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select value_in_use from sys.configurations where name = &apos;lightweight pooling&apos;.
        /// </summary>
        internal static string sqlGetLightweightPooling {
            get {
                return ResourceManager.GetString("sqlGetLightweightPooling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT pr.name, pr.sid, pr.principal_id, max(pe.type) as [level] 
        ///FROM sys.server_principals pr 
        ///LEFT JOIN sys.server_permissions pe 
        ///ON pr.principal_id = pe.grantee_principal_id AND pe.type in (&apos;XA&apos;, &apos;XU&apos;) AND pe.state = &apos;G&apos;
        ///WHERE pr.type=&apos;K&apos;
        ///GROUP BY pr.name, pr.sid, pr.principal_id.
        /// </summary>
        internal static string sqlGetLogins {
            get {
                return ResourceManager.GetString("sqlGetLogins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select o.object_id, o.name, p.parameter_id, case when p.is_output = 1 then &apos;(output)&apos; else p.name end as parameter, t.name as type, p.has_default_value, p.default_value, p.max_length
        ///from [%DATABASE%].sys.parameters p 
        ///	inner join [%DATABASE%].sys.types t on p.user_type_id = t.user_type_id
        ///	inner join [%DATABASE%].sys.objects o on o.object_id = p.object_id.
        /// </summary>
        internal static string sqlGetParameters {
            get {
                return ResourceManager.GetString("sqlGetParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT SERVERPROPERTY (&apos;productlevel&apos;).
        /// </summary>
        internal static string sqlGetProductLevel {
            get {
                return ResourceManager.GetString("sqlGetProductLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * from [%DATABASE%].sys.assembly_references.
        /// </summary>
        internal static string sqlGetReferences {
            get {
                return ResourceManager.GetString("sqlGetReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * from [%DATABASE%].sys.schemas.
        /// </summary>
        internal static string sqlGetSchemas {
            get {
                return ResourceManager.GetString("sqlGetSchemas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select * from fn_my_permissions(null, null) where permission_name in (&apos;EXTERNAL ACCESS ASSEMBLY&apos;, &apos;UNSAFE ASSEMBLY&apos;, &apos;ALTER SETTINGS&apos;, &apos;ALTER ANY DATABASE&apos;);.
        /// </summary>
        internal static string sqlGetServerPermissions {
            get {
                return ResourceManager.GetString("sqlGetServerPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select t.name, s.name as [schema], [type] 
        ///from [%DATABASE%].sys.tables t inner join [%DATABASE%].sys.schemas s on t.schema_id = s.schema_id
        ///union
        ///select v.name, s.name as [schema], [type] 
        ///from [%DATABASE%].sys.views v inner join [%DATABASE%].sys.schemas s on v.schema_id = s.schema_id
        ///order by [type], [schema], name.
        /// </summary>
        internal static string sqlGetTablesAndViews {
            get {
                return ResourceManager.GetString("sqlGetTablesAndViews", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select t.name, t.type, isnull(s.name, &apos;&apos;) as target_schema, isnull(o.name, t.parent_class_desc) as target_object, te.type_desc, t.is_instead_of_trigger, t.is_disabled, t.object_id, isnull(o.type, &apos;&apos;) as target_type
        ///from [%DATABASE%].sys.triggers t
        ///	inner join [%DATABASE%].sys.trigger_events te on t.object_id = te.object_id
        ///	left join [%DATABASE%].sys.objects o on t.parent_id = o.object_id
        ///	left join [%DATABASE%].sys.schemas s on s.schema_id = o.schema_id
        ///order by t.name.
        /// </summary>
        internal static string sqlGetTriggers {
            get {
                return ResourceManager.GetString("sqlGetTriggers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT  SERVERPROPERTY(&apos;productversion&apos;).
        /// </summary>
        internal static string sqlGetVersion {
            get {
                return ResourceManager.GetString("sqlGetVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT [%DATABASE%].%FUNCTION% (%PARMLIST%).
        /// </summary>
        internal static string sqlSelectFunction {
            get {
                return ResourceManager.GetString("sqlSelectFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sp_configure &apos;clr_enabled&apos;, %NEWVALUE%;
        ///Reconfigure.
        /// </summary>
        internal static string sqlSetClrEnabled {
            get {
                return ResourceManager.GetString("sqlSetClrEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to sp_configure &apos;lightweight_pooling&apos;, %NEWVALUE%;
        ///Reconfigure.
        /// </summary>
        internal static string sqlSetLightweightPooling {
            get {
                return ResourceManager.GetString("sqlSetLightweightPooling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &gt;&gt;&gt;&gt;&gt;&gt; SET SERVER AS [%SERVER%] &lt;&lt;&lt;&lt;&lt;&lt;.
        /// </summary>
        internal static string sqlSetServer {
            get {
                return ResourceManager.GetString("sqlSetServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///-- !!! WARNING: To avoid accidental execution against the wrong server please ensure 
        ///-- !!! that the correct server is associated with this query window before execution. 
        ///-- !!! The target server for the following commands should be: %SERVER%
        ///
        ///.
        /// </summary>
        internal static string sqlSetServerReminder {
            get {
                return ResourceManager.GetString("sqlSetServerReminder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///-- !!! WARNING: There are multiple servers targeted by the commands in this script - take care not to execute
        ///-- !!! commands against the wrong server. Please check below for other instances of this message. 
        ///-- !!! The target server for the following commands down to the next warning should be: %SERVER%
        ///
        ///.
        /// </summary>
        internal static string sqlSetServerWarning {
            get {
                return ResourceManager.GetString("sqlSetServerWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ALTER DATABASE [%DATABASE%] SET TRUSTWORTHY %NEWVALUE%;.
        /// </summary>
        internal static string sqlSetTrustworthy {
            get {
                return ResourceManager.GetString("sqlSetTrustworthy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXEC sys.sp_addextendedproperty @name=N&apos;AutoDeployed&apos;, @value=N&apos;yes&apos; , @level0type=N&apos;ASSEMBLY&apos;,@level0name=N&apos;%ASSEMBLY%&apos;.
        /// </summary>
        internal static string sqlSetVSAssemblyFlag {
            get {
                return ResourceManager.GetString("sqlSetVSAssemblyFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXEC sys.sp_addextendedproperty @name=N&apos;AutoDeployed&apos;, @value=N&apos;yes&apos; , @level0type=N&apos;SCHEMA&apos;,@level0name=N&apos;%SCHEMA%&apos;, @level1type=N&apos;%TYPE%&apos;,@level1name=N&apos;%FUNCTION%&apos;.
        /// </summary>
        internal static string sqlSetVSFunctionFlag {
            get {
                return ResourceManager.GetString("sqlSetVSFunctionFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EXEC sys.sp_addextendedproperty @name=N&apos;AutoDeployed&apos;, @value=N&apos;yes&apos; , @level0type=N&apos;TRIGGER&apos;,@level0name=N&apos;%TRIGGER%&apos;.
        /// </summary>
        internal static string sqlSetVSTriggerFlag {
            get {
                return ResourceManager.GetString("sqlSetVSTriggerFlag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /****** Object:  SqlAssembly [%ASSEMBLY%]    Script Date: %DATE% ******/
        ///ALTER ASSEMBLY [%ASSEMBLY%]
        ///FROM %ASSEMBLYBYTES%.
        /// </summary>
        internal static string sqlSwapAssembly {
            get {
                return ResourceManager.GetString("sqlSwapAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [%DATABASE%].
        /// </summary>
        internal static string sqlUseDatabase {
            get {
                return ResourceManager.GetString("sqlUseDatabase", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap SSMS_Database {
            get {
                object obj = ResourceManager.GetObject("SSMS_Database", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SSMS_External_Assembly {
            get {
                object obj = ResourceManager.GetObject("SSMS_External_Assembly", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SSMS_Folder {
            get {
                object obj = ResourceManager.GetObject("SSMS_Folder", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SSMS_Function {
            get {
                object obj = ResourceManager.GetObject("SSMS_Function", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SSMS_Schema {
            get {
                object obj = ResourceManager.GetObject("SSMS_Schema", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SSMS_Server {
            get {
                object obj = ResourceManager.GetObject("SSMS_Server", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SSMS_Stored_Proc__external_ {
            get {
                object obj = ResourceManager.GetObject("SSMS_Stored_Proc__external_", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SSMS_Table {
            get {
                object obj = ResourceManager.GetObject("SSMS_Table", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SSMS_Table_valued_function {
            get {
                object obj = ResourceManager.GetObject("SSMS_Table_valued_function", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SSMS_UDT {
            get {
                object obj = ResourceManager.GetObject("SSMS_UDT", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SSMS_Unsafe_Assembly {
            get {
                object obj = ResourceManager.GetObject("SSMS_Unsafe_Assembly", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Statistics {
            get {
                object obj = ResourceManager.GetObject("Statistics", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Stop {
            get {
                object obj = ResourceManager.GetObject("Stop", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap StopHighlighted {
            get {
                object obj = ResourceManager.GetObject("StopHighlighted", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Table {
            get {
                object obj = ResourceManager.GetObject("Table", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Trigger {
            get {
                object obj = ResourceManager.GetObject("Trigger", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Trustworthy {
            get {
                object obj = ResourceManager.GetObject("Trustworthy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Two_scripts {
            get {
                object obj = ResourceManager.GetObject("Two_scripts", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap unchecked_box {
            get {
                object obj = ResourceManager.GetObject("unchecked_box", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Undo {
            get {
                object obj = ResourceManager.GetObject("Undo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap UndoDropAssemby {
            get {
                object obj = ResourceManager.GetObject("UndoDropAssemby", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap UndoSwapAssembly {
            get {
                object obj = ResourceManager.GetObject("UndoSwapAssembly", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap UnsafeAssembly {
            get {
                object obj = ResourceManager.GetObject("UnsafeAssembly", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Untrustworthy {
            get {
                object obj = ResourceManager.GetObject("Untrustworthy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap View {
            get {
                object obj = ResourceManager.GetObject("View", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ViewAs {
            get {
                object obj = ResourceManager.GetObject("ViewAs", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ViewAsExecute {
            get {
                object obj = ResourceManager.GetObject("ViewAsExecute", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ViewAsRollback {
            get {
                object obj = ResourceManager.GetObject("ViewAsRollback", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap WarningServer {
            get {
                object obj = ResourceManager.GetObject("WarningServer", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Yellow_Arrow {
            get {
                object obj = ResourceManager.GetObject("Yellow_Arrow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
    }
}
